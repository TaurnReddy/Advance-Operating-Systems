<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{mso-style-link:"Plain Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:10.5pt;
	font-family:Consolas;}
span.PlainTextChar
	{mso-style-name:"Plain Text Char";
	mso-style-link:"Plain Text";
	font-family:Consolas;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 75.1pt 1.0in 75.05pt;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<p class=MsoPlainText><span style='font-family:"Courier New"'>  //THE SLEEPING
TEACHING ASSISTANT</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>#include&lt;stdio.h&gt;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>#include&lt;stdlib.h&gt;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>#include&lt;pthread.h&gt;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>#include&lt;signal.h&gt;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>#include&lt;semaphore.h&gt;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>#include&lt;stdbool.h&gt;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>sem_t s;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>pthread_mutex_t
mutex;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>pthread_cond_t
cond;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>pthread_mutex_t
stud;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>void* processFun(void
*arg)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>{</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        int *h,p;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        h = arg;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        p = *h;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
while(p!=0)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        {</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
pthread_mutex_lock(&amp;mutex);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
pthread_cond_wait(&amp;cond, &amp;mutex);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
printf(&quot;TA is currently busy with helping student.... \n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
pthread_mutex_unlock(&amp;mutex);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
p--;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        }</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_exit(NULL);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>}</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>bool
resourceFun(int tid)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>{</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        int
sem_ret =  sem_trywait(&amp;s);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
if(sem_ret == -1){</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                return
false;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        }</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;Student: %d   --- Waiting in chair\n&quot;,tid);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_lock(&amp;stud);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_cond_signal(&amp;cond);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;Student: %d   --- TA finds waiting student and gave the system...
\n&quot;,tid);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        sleep(rand()%10);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;Student: %d   --- Done with the work\n&quot;,tid);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;TA will help if any student is waiting, otherwise he will simply
sleep\n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_unlock(&amp;stud);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
sem_post(&amp;s);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        return
true;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>}</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>void* myFun(void
*arg)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>{</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        int
*a,t,f;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        a = arg;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        f = *a;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        bool
gotHelp = false;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        bool ret
= false;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        f++;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;Student : %d is created\n&quot;,f);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>step1:  t =
rand()%10;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        sleep(t);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        ret =
resourceFun(f);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        if(ret ==
true)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        {</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
printf(&quot;Student: %d   --- got help from TA, hence exiting\n&quot;,f);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
pthread_exit(NULL);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        }</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;Student: %d   --- waiting seats are full, student should come
after some time\n&quot;,f);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        goto
step1;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>}</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>void handler(int
signal)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>{</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;\nuser entered CTRL+C, hence exiting\n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_destroy(&amp;mutex);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_destroy(&amp;stud);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        pthread_cond_destroy(&amp;cond);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        exit(0);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>}</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>int main()</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>{</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        pthread_t
tid[10],TA;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        int i =
0,n;</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
signal(SIGINT,handler);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_init(&amp;mutex,0);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_init(&amp;stud,0);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_cond_init(&amp;cond,0);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        int x =
sem_init(&amp;s,0,4);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
//printf(&quot;           TA thread started...\n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
printf(&quot;Enter number of students in the class\n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
scanf(&quot;%d&quot;,&amp;n);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_create(&amp;TA, NULL, processFun, (void *)&amp;n);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
if(n&gt;0)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        {</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
for(i=0;i&lt;n;i++)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                {</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                       
pthread_create(&amp;tid[i], NULL, myFun, (void *)&amp;i);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                       
sleep(1);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                }</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
for(i=0;i&lt;n;i++)</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                {</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                        pthread_join(tid[i],NULL);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>                }</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
printf(&quot;Process ends, as the all the students got the help from
TA\n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        }else</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        {</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>               
printf(&quot;Please run again and enter number greater than zero\n&quot;);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        }</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_destroy(&amp;mutex);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_mutex_destroy(&amp;stud);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>       
pthread_cond_destroy(&amp;cond);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>        exit(0);</span></p>

<p class=MsoPlainText><span style='font-family:"Courier New"'>}</span></p>

</div>

</body>

</html>
